<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="534" onload="init(evt)" viewBox="0 0 1200 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="534.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="517" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="517" > </text>
<g id="frames">
<g >
<title>amdgpu_irq_handler (8 samples, 0.20%)</title><rect x="676.8" y="293" width="2.4" height="15.0" fill="rgb(224,116,19)" rx="2" ry="2" />
<text  x="679.77" y="303.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_position (2 samples, 0.05%)</title><rect x="677.4" y="85" width="0.6" height="15.0" fill="rgb(247,199,1)" rx="2" ry="2" />
<text  x="680.37" y="95.5" ></text>
</g>
<g >
<title>default_wake_function (1 samples, 0.03%)</title><rect x="678.6" y="117" width="0.3" height="15.0" fill="rgb(230,8,7)" rx="2" ry="2" />
<text  x="681.57" y="127.5" ></text>
</g>
<g >
<title>resched_curr (1 samples, 0.03%)</title><rect x="678.6" y="37" width="0.3" height="15.0" fill="rgb(212,213,46)" rx="2" ry="2" />
<text  x="681.57" y="47.5" ></text>
</g>
<g >
<title>dm_crtc_get_scanoutpos (3 samples, 0.08%)</title><rect x="677.1" y="133" width="0.9" height="15.0" fill="rgb(212,107,32)" rx="2" ry="2" />
<text  x="680.07" y="143.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.03%)</title><rect x="1189.7" y="357" width="0.3" height="15.0" fill="rgb(220,19,10)" rx="2" ry="2" />
<text  x="1192.70" y="367.5" ></text>
</g>
<g >
<title>intel_pstate_update_util (1 samples, 0.03%)</title><rect x="676.5" y="245" width="0.3" height="15.0" fill="rgb(253,48,15)" rx="2" ry="2" />
<text  x="679.48" y="255.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.03%)</title><rect x="676.5" y="309" width="0.3" height="15.0" fill="rgb(231,159,4)" rx="2" ry="2" />
<text  x="679.48" y="319.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.03%)</title><rect x="68.0" y="341" width="0.3" height="15.0" fill="rgb(216,105,50)" rx="2" ry="2" />
<text  x="70.95" y="351.5" ></text>
</g>
<g >
<title>GetBeatTypeCount (1 samples, 0.03%)</title><rect x="685.4" y="421" width="0.3" height="15.0" fill="rgb(249,221,12)" rx="2" ry="2" />
<text  x="688.44" y="431.5" ></text>
</g>
<g >
<title>ourtest (3,950 samples, 100.00%)</title><rect x="10.0" y="469" width="1180.0" height="15.0" fill="rgb(215,94,28)" rx="2" ry="2" />
<text  x="13.00" y="479.5" >ourtest</text>
</g>
<g >
<title>ResetBDAC (9 samples, 0.23%)</title><rect x="683.3" y="437" width="2.7" height="15.0" fill="rgb(254,98,21)" rx="2" ry="2" />
<text  x="686.35" y="447.5" ></text>
</g>
<g >
<title>native_read_msr (1 samples, 0.03%)</title><rect x="676.5" y="229" width="0.3" height="15.0" fill="rgb(252,146,37)" rx="2" ry="2" />
<text  x="679.48" y="239.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (1 samples, 0.03%)</title><rect x="676.8" y="181" width="0.3" height="15.0" fill="rgb(240,164,6)" rx="2" ry="2" />
<text  x="679.77" y="191.5" ></text>
</g>
<g >
<title>gfx_v8_0_eop_irq (2 samples, 0.05%)</title><rect x="678.6" y="245" width="0.6" height="15.0" fill="rgb(222,52,44)" rx="2" ry="2" />
<text  x="681.57" y="255.5" ></text>
</g>
<g >
<title>amdgpu_irq_handler (1 samples, 0.03%)</title><rect x="1189.7" y="309" width="0.3" height="15.0" fill="rgb(221,0,21)" rx="2" ry="2" />
<text  x="1192.70" y="319.5" ></text>
</g>
<g >
<title>check_preempt_curr (1 samples, 0.03%)</title><rect x="678.6" y="53" width="0.3" height="15.0" fill="rgb(225,114,48)" rx="2" ry="2" />
<text  x="681.57" y="63.5" ></text>
</g>
<g >
<title>handle_irq_event (8 samples, 0.20%)</title><rect x="676.8" y="341" width="2.4" height="15.0" fill="rgb(234,43,20)" rx="2" ry="2" />
<text  x="679.77" y="351.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (8 samples, 0.20%)</title><rect x="676.8" y="309" width="2.4" height="15.0" fill="rgb(229,42,44)" rx="2" ry="2" />
<text  x="679.77" y="319.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.03%)</title><rect x="68.0" y="325" width="0.3" height="15.0" fill="rgb(254,71,14)" rx="2" ry="2" />
<text  x="70.95" y="335.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (1 samples, 0.03%)</title><rect x="1189.7" y="85" width="0.3" height="15.0" fill="rgb(246,48,54)" rx="2" ry="2" />
<text  x="1192.70" y="95.5" ></text>
</g>
<g >
<title>dc_stream_get_scanoutpos (3 samples, 0.08%)</title><rect x="677.1" y="117" width="0.9" height="15.0" fill="rgb(231,66,21)" rx="2" ry="2" />
<text  x="680.07" y="127.5" ></text>
</g>
<g >
<title>dm_crtc_get_scanoutpos (1 samples, 0.03%)</title><rect x="678.3" y="133" width="0.3" height="15.0" fill="rgb(211,63,37)" rx="2" ry="2" />
<text  x="681.27" y="143.5" ></text>
</g>
<g >
<title>drm_update_vblank_count (4 samples, 0.10%)</title><rect x="677.1" y="197" width="1.2" height="15.0" fill="rgb(243,211,10)" rx="2" ry="2" />
<text  x="680.07" y="207.5" ></text>
</g>
<g >
<title>amdgpu_get_vblank_counter_kms (1 samples, 0.03%)</title><rect x="1189.7" y="181" width="0.3" height="15.0" fill="rgb(213,209,33)" rx="2" ry="2" />
<text  x="1192.70" y="191.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (4 samples, 0.10%)</title><rect x="1188.5" y="373" width="1.2" height="15.0" fill="rgb(222,132,26)" rx="2" ry="2" />
<text  x="1191.51" y="383.5" ></text>
</g>
<g >
<title>ret_from_intr (9 samples, 0.23%)</title><rect x="676.8" y="405" width="2.7" height="15.0" fill="rgb(235,224,35)" rx="2" ry="2" />
<text  x="679.77" y="415.5" ></text>
</g>
<g >
<title>slowperformance (997 samples, 25.24%)</title><rect x="892.2" y="437" width="297.8" height="15.0" fill="rgb(222,224,27)" rx="2" ry="2" />
<text  x="895.16" y="447.5" >slowperformance</text>
</g>
<g >
<title>drm_handle_vblank (4 samples, 0.10%)</title><rect x="677.1" y="213" width="1.2" height="15.0" fill="rgb(252,96,44)" rx="2" ry="2" />
<text  x="680.07" y="223.5" ></text>
</g>
<g >
<title>MinimumBeatVariation (1 samples, 0.03%)</title><rect x="685.7" y="421" width="0.3" height="15.0" fill="rgb(224,119,4)" rx="2" ry="2" />
<text  x="688.74" y="431.5" ></text>
</g>
<g >
<title>amdgpu_ih_process (1 samples, 0.03%)</title><rect x="1189.7" y="293" width="0.3" height="15.0" fill="rgb(249,167,53)" rx="2" ry="2" />
<text  x="1192.70" y="303.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.10%)</title><rect x="1188.5" y="277" width="1.2" height="15.0" fill="rgb(241,123,39)" rx="2" ry="2" />
<text  x="1191.51" y="287.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.03%)</title><rect x="676.5" y="277" width="0.3" height="15.0" fill="rgb(250,51,28)" rx="2" ry="2" />
<text  x="679.48" y="287.5" ></text>
</g>
<g >
<title>native_read_msr (1 samples, 0.03%)</title><rect x="68.0" y="261" width="0.3" height="15.0" fill="rgb(217,146,48)" rx="2" ry="2" />
<text  x="70.95" y="271.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (1 samples, 0.03%)</title><rect x="678.0" y="101" width="0.3" height="15.0" fill="rgb(249,70,20)" rx="2" ry="2" />
<text  x="680.97" y="111.5" ></text>
</g>
<g >
<title>dc_stream_get_vblank_counter (1 samples, 0.03%)</title><rect x="678.0" y="133" width="0.3" height="15.0" fill="rgb(212,132,49)" rx="2" ry="2" />
<text  x="680.97" y="143.5" ></text>
</g>
<g >
<title>NoiseCheck (311 samples, 7.87%)</title><rect x="794.5" y="421" width="92.9" height="15.0" fill="rgb(237,25,23)" rx="2" ry="2" />
<text  x="797.48" y="431.5" >NoiseCheck</text>
</g>
<g >
<title>dc_stream_get_scanoutpos (1 samples, 0.03%)</title><rect x="1189.7" y="133" width="0.3" height="15.0" fill="rgb(216,58,33)" rx="2" ry="2" />
<text  x="1192.70" y="143.5" ></text>
</g>
<g >
<title>drm_update_vblank_count (1 samples, 0.03%)</title><rect x="1189.7" y="213" width="0.3" height="15.0" fill="rgb(226,201,36)" rx="2" ry="2" />
<text  x="1192.70" y="223.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.03%)</title><rect x="678.6" y="181" width="0.3" height="15.0" fill="rgb(241,27,24)" rx="2" ry="2" />
<text  x="681.57" y="191.5" ></text>
</g>
<g >
<title>BestMorphMatch (192 samples, 4.86%)</title><rect x="10.9" y="453" width="57.4" height="15.0" fill="rgb(252,6,20)" rx="2" ry="2" />
<text  x="13.90" y="463.5" >BestMo..</text>
</g>
<g >
<title>drm_crtc_accurate_vblank_count (1 samples, 0.03%)</title><rect x="678.3" y="213" width="0.3" height="15.0" fill="rgb(240,68,0)" rx="2" ry="2" />
<text  x="681.27" y="223.5" ></text>
</g>
<g >
<title>amdgpu_get_crtc_scanoutpos (3 samples, 0.08%)</title><rect x="677.1" y="149" width="0.9" height="15.0" fill="rgb(208,107,50)" rx="2" ry="2" />
<text  x="680.07" y="159.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_crtc_scanoutpos (1 samples, 0.03%)</title><rect x="1189.7" y="117" width="0.3" height="15.0" fill="rgb(215,111,32)" rx="2" ry="2" />
<text  x="1192.70" y="127.5" ></text>
</g>
<g >
<title>[unknown] (3,754 samples, 95.04%)</title><rect x="68.6" y="453" width="1121.4" height="15.0" fill="rgb(236,67,2)" rx="2" ry="2" />
<text  x="71.55" y="463.5" >[unknown]</text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.03%)</title><rect x="68.0" y="309" width="0.3" height="15.0" fill="rgb(235,45,12)" rx="2" ry="2" />
<text  x="70.95" y="319.5" ></text>
</g>
<g >
<title>all (3,950 samples, 100%)</title><rect x="10.0" y="485" width="1180.0" height="15.0" fill="rgb(233,127,0)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.03%)</title><rect x="68.0" y="389" width="0.3" height="15.0" fill="rgb(208,4,20)" rx="2" ry="2" />
<text  x="70.95" y="399.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.03%)</title><rect x="678.6" y="149" width="0.3" height="15.0" fill="rgb(218,165,27)" rx="2" ry="2" />
<text  x="681.57" y="159.5" ></text>
</g>
<g >
<title>AnalyzeBeat (3 samples, 0.08%)</title><rect x="10.0" y="453" width="0.9" height="15.0" fill="rgb(222,137,22)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>AnalyzeBeat (3 samples, 0.08%)</title><rect x="68.6" y="437" width="0.8" height="15.0" fill="rgb(238,95,21)" rx="2" ry="2" />
<text  x="71.55" y="447.5" ></text>
</g>
<g >
<title>main (16 samples, 0.41%)</title><rect x="887.4" y="437" width="4.8" height="15.0" fill="rgb(242,17,43)" rx="2" ry="2" />
<text  x="890.38" y="447.5" ></text>
</g>
<g >
<title>BestMorphMatch (13 samples, 0.33%)</title><rect x="679.5" y="437" width="3.8" height="15.0" fill="rgb(217,47,34)" rx="2" ry="2" />
<text  x="682.46" y="447.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (1 samples, 0.03%)</title><rect x="678.6" y="69" width="0.3" height="15.0" fill="rgb(206,101,19)" rx="2" ry="2" />
<text  x="681.57" y="79.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.03%)</title><rect x="1189.7" y="389" width="0.3" height="15.0" fill="rgb(249,159,25)" rx="2" ry="2" />
<text  x="1192.70" y="399.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.03%)</title><rect x="676.5" y="325" width="0.3" height="15.0" fill="rgb(216,153,49)" rx="2" ry="2" />
<text  x="679.48" y="335.5" ></text>
</g>
<g >
<title>amdgpu_irq_dispatch (8 samples, 0.20%)</title><rect x="676.8" y="261" width="2.4" height="15.0" fill="rgb(230,182,1)" rx="2" ry="2" />
<text  x="679.77" y="271.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.03%)</title><rect x="68.0" y="357" width="0.3" height="15.0" fill="rgb(241,211,4)" rx="2" ry="2" />
<text  x="70.95" y="367.5" ></text>
</g>
<g >
<title>amdgpu_mm_rreg (1 samples, 0.03%)</title><rect x="676.8" y="165" width="0.3" height="15.0" fill="rgb(246,207,5)" rx="2" ry="2" />
<text  x="679.77" y="175.5" ></text>
</g>
<g >
<title>remote_function (4 samples, 0.10%)</title><rect x="1188.5" y="357" width="1.2" height="15.0" fill="rgb(244,63,19)" rx="2" ry="2" />
<text  x="1191.51" y="367.5" ></text>
</g>
<g >
<title>autoremove_wake_function (1 samples, 0.03%)</title><rect x="678.6" y="133" width="0.3" height="15.0" fill="rgb(246,108,32)" rx="2" ry="2" />
<text  x="681.57" y="143.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_position (1 samples, 0.03%)</title><rect x="678.3" y="85" width="0.3" height="15.0" fill="rgb(254,102,41)" rx="2" ry="2" />
<text  x="681.27" y="95.5" ></text>
</g>
<g >
<title>dm_crtc_high_irq (4 samples, 0.10%)</title><rect x="677.1" y="229" width="1.2" height="15.0" fill="rgb(250,100,39)" rx="2" ry="2" />
<text  x="680.07" y="239.5" ></text>
</g>
<g >
<title>__get_vblank_counter (4 samples, 0.10%)</title><rect x="677.1" y="181" width="1.2" height="15.0" fill="rgb(221,156,40)" rx="2" ry="2" />
<text  x="680.07" y="191.5" ></text>
</g>
<g >
<title>handle_irq (9 samples, 0.23%)</title><rect x="676.8" y="373" width="2.7" height="15.0" fill="rgb(254,42,12)" rx="2" ry="2" />
<text  x="679.77" y="383.5" ></text>
</g>
<g >
<title>amdgpu_dm_irq_handler (1 samples, 0.03%)</title><rect x="1189.7" y="261" width="0.3" height="15.0" fill="rgb(246,120,26)" rx="2" ry="2" />
<text  x="1192.70" y="271.5" ></text>
</g>
<g >
<title>QRSDet (2,041 samples, 51.67%)</title><rect x="69.7" y="421" width="609.8" height="15.0" fill="rgb(206,91,24)" rx="2" ry="2" />
<text  x="72.75" y="431.5" >QRSDet</text>
</g>
<g >
<title>BeatDetectAndClassify (2,042 samples, 51.70%)</title><rect x="69.4" y="437" width="610.1" height="15.0" fill="rgb(250,127,7)" rx="2" ry="2" />
<text  x="72.45" y="447.5" >BeatDetectAndClassify</text>
</g>
<g >
<title>handle_edge_irq (9 samples, 0.23%)</title><rect x="676.8" y="357" width="2.7" height="15.0" fill="rgb(224,48,52)" rx="2" ry="2" />
<text  x="679.77" y="367.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.03%)</title><rect x="676.5" y="293" width="0.3" height="15.0" fill="rgb(228,207,1)" rx="2" ry="2" />
<text  x="679.48" y="303.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (1 samples, 0.03%)</title><rect x="678.3" y="69" width="0.3" height="15.0" fill="rgb(224,112,9)" rx="2" ry="2" />
<text  x="681.27" y="79.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.03%)</title><rect x="676.5" y="373" width="0.3" height="15.0" fill="rgb(210,135,15)" rx="2" ry="2" />
<text  x="679.48" y="383.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="678.6" y="165" width="0.3" height="15.0" fill="rgb(237,5,40)" rx="2" ry="2" />
<text  x="681.57" y="175.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_position (1 samples, 0.03%)</title><rect x="1189.7" y="101" width="0.3" height="15.0" fill="rgb(218,220,2)" rx="2" ry="2" />
<text  x="1192.70" y="111.5" ></text>
</g>
<g >
<title>do_IRQ (9 samples, 0.23%)</title><rect x="676.8" y="389" width="2.7" height="15.0" fill="rgb(229,91,6)" rx="2" ry="2" />
<text  x="679.77" y="399.5" ></text>
</g>
<g >
<title>amd_sched_process_job (2 samples, 0.05%)</title><rect x="678.6" y="197" width="0.6" height="15.0" fill="rgb(234,6,17)" rx="2" ry="2" />
<text  x="681.57" y="207.5" ></text>
</g>
<g >
<title>amdgpu_get_crtc_scanoutpos (1 samples, 0.03%)</title><rect x="678.3" y="149" width="0.3" height="15.0" fill="rgb(214,2,8)" rx="2" ry="2" />
<text  x="681.27" y="159.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_crtc_scanoutpos (1 samples, 0.03%)</title><rect x="678.3" y="101" width="0.3" height="15.0" fill="rgb(211,173,43)" rx="2" ry="2" />
<text  x="681.27" y="111.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.03%)</title><rect x="68.0" y="293" width="0.3" height="15.0" fill="rgb(233,84,7)" rx="2" ry="2" />
<text  x="70.95" y="303.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.03%)</title><rect x="678.6" y="85" width="0.3" height="15.0" fill="rgb(227,111,48)" rx="2" ry="2" />
<text  x="681.57" y="95.5" ></text>
</g>
<g >
<title>amdgpu_mm_rreg (2 samples, 0.05%)</title><rect x="677.4" y="53" width="0.6" height="15.0" fill="rgb(254,131,33)" rx="2" ry="2" />
<text  x="680.37" y="63.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (4 samples, 0.10%)</title><rect x="1188.5" y="405" width="1.2" height="15.0" fill="rgb(249,42,11)" rx="2" ry="2" />
<text  x="1191.51" y="415.5" ></text>
</g>
<g >
<title>amdgpu_get_vblank_counter_kms (4 samples, 0.10%)</title><rect x="677.1" y="165" width="1.2" height="15.0" fill="rgb(249,179,36)" rx="2" ry="2" />
<text  x="680.07" y="175.5" ></text>
</g>
<g >
<title>dal_irq_service_ack_generic (1 samples, 0.03%)</title><rect x="676.8" y="197" width="0.3" height="15.0" fill="rgb(239,33,22)" rx="2" ry="2" />
<text  x="679.77" y="207.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.19 (4 samples, 0.10%)</title><rect x="1188.5" y="261" width="1.2" height="15.0" fill="rgb(240,61,11)" rx="2" ry="2" />
<text  x="1191.51" y="271.5" ></text>
</g>
<g >
<title>dma_fence_signal (2 samples, 0.05%)</title><rect x="678.6" y="213" width="0.6" height="15.0" fill="rgb(232,157,32)" rx="2" ry="2" />
<text  x="681.57" y="223.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="1189.7" y="421" width="0.3" height="15.0" fill="rgb(221,31,18)" rx="2" ry="2" />
<text  x="1192.70" y="431.5" ></text>
</g>
<g >
<title>amdgpu_mm_rreg (1 samples, 0.03%)</title><rect x="677.1" y="69" width="0.3" height="15.0" fill="rgb(244,227,2)" rx="2" ry="2" />
<text  x="680.07" y="79.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.05%)</title><rect x="676.2" y="389" width="0.6" height="15.0" fill="rgb(245,118,31)" rx="2" ry="2" />
<text  x="679.18" y="399.5" ></text>
</g>
<g >
<title>dc_stream_get_scanoutpos (1 samples, 0.03%)</title><rect x="678.3" y="117" width="0.3" height="15.0" fill="rgb(253,36,12)" rx="2" ry="2" />
<text  x="681.27" y="127.5" ></text>
</g>
<g >
<title>AnalyzeBeat (2 samples, 0.05%)</title><rect x="683.3" y="421" width="0.6" height="15.0" fill="rgb(207,213,54)" rx="2" ry="2" />
<text  x="686.35" y="431.5" ></text>
</g>
<g >
<title>dm_crtc_get_scanoutpos (1 samples, 0.03%)</title><rect x="1189.7" y="149" width="0.3" height="15.0" fill="rgb(226,59,23)" rx="2" ry="2" />
<text  x="1192.70" y="159.5" ></text>
</g>
<g >
<title>dm_pflip_high_irq (1 samples, 0.03%)</title><rect x="678.3" y="229" width="0.3" height="15.0" fill="rgb(220,228,7)" rx="2" ry="2" />
<text  x="681.27" y="239.5" ></text>
</g>
<g >
<title>__get_vblank_counter (1 samples, 0.03%)</title><rect x="678.3" y="181" width="0.3" height="15.0" fill="rgb(241,97,43)" rx="2" ry="2" />
<text  x="681.27" y="191.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.03%)</title><rect x="68.0" y="405" width="0.3" height="15.0" fill="rgb(214,13,12)" rx="2" ry="2" />
<text  x="70.95" y="415.5" ></text>
</g>
<g >
<title>amdgpu_dm_irq_handler (6 samples, 0.15%)</title><rect x="676.8" y="245" width="1.8" height="15.0" fill="rgb(216,136,51)" rx="2" ry="2" />
<text  x="679.77" y="255.5" ></text>
</g>
<g >
<title>__get_vblank_counter (1 samples, 0.03%)</title><rect x="1189.7" y="197" width="0.3" height="15.0" fill="rgb(215,74,43)" rx="2" ry="2" />
<text  x="1192.70" y="207.5" ></text>
</g>
<g >
<title>amdgpu_mm_rreg (1 samples, 0.03%)</title><rect x="678.3" y="53" width="0.3" height="15.0" fill="rgb(222,22,38)" rx="2" ry="2" />
<text  x="681.27" y="63.5" ></text>
</g>
<g >
<title>amdgpu_irq_dispatch (1 samples, 0.03%)</title><rect x="1189.7" y="277" width="0.3" height="15.0" fill="rgb(223,93,8)" rx="2" ry="2" />
<text  x="1192.70" y="287.5" ></text>
</g>
<g >
<title>ctx_resched (4 samples, 0.10%)</title><rect x="1188.5" y="309" width="1.2" height="15.0" fill="rgb(209,176,42)" rx="2" ry="2" />
<text  x="1191.51" y="319.5" ></text>
</g>
<g >
<title>dal_irq_service_ack (1 samples, 0.03%)</title><rect x="676.8" y="213" width="0.3" height="15.0" fill="rgb(209,56,7)" rx="2" ry="2" />
<text  x="679.77" y="223.5" ></text>
</g>
<g >
<title>[unknown] (674 samples, 17.06%)</title><rect x="686.0" y="437" width="201.4" height="15.0" fill="rgb(210,84,48)" rx="2" ry="2" />
<text  x="689.04" y="447.5" >[unknown]</text>
</g>
<g >
<title>amdgpu_fence_process (2 samples, 0.05%)</title><rect x="678.6" y="229" width="0.6" height="15.0" fill="rgb(233,126,23)" rx="2" ry="2" />
<text  x="681.57" y="239.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.03%)</title><rect x="1189.7" y="325" width="0.3" height="15.0" fill="rgb(216,16,47)" rx="2" ry="2" />
<text  x="1192.70" y="335.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.03%)</title><rect x="1189.7" y="341" width="0.3" height="15.0" fill="rgb(243,134,41)" rx="2" ry="2" />
<text  x="1192.70" y="351.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.03%)</title><rect x="676.5" y="261" width="0.3" height="15.0" fill="rgb(225,179,54)" rx="2" ry="2" />
<text  x="679.48" y="271.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="678.6" y="101" width="0.3" height="15.0" fill="rgb(244,175,2)" rx="2" ry="2" />
<text  x="681.57" y="111.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (1 samples, 0.03%)</title><rect x="677.1" y="85" width="0.3" height="15.0" fill="rgb(218,16,15)" rx="2" ry="2" />
<text  x="680.07" y="95.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.03%)</title><rect x="676.5" y="341" width="0.3" height="15.0" fill="rgb(205,60,3)" rx="2" ry="2" />
<text  x="679.48" y="351.5" ></text>
</g>
<g >
<title>amdgpu_cgs_read_register (2 samples, 0.05%)</title><rect x="677.4" y="69" width="0.6" height="15.0" fill="rgb(250,78,35)" rx="2" ry="2" />
<text  x="680.37" y="79.5" ></text>
</g>
<g >
<title>amdgpu_get_crtc_scanoutpos (1 samples, 0.03%)</title><rect x="1189.7" y="165" width="0.3" height="15.0" fill="rgb(207,146,12)" rx="2" ry="2" />
<text  x="1192.70" y="175.5" ></text>
</g>
<g >
<title>drm_handle_vblank (1 samples, 0.03%)</title><rect x="1189.7" y="229" width="0.3" height="15.0" fill="rgb(222,9,29)" rx="2" ry="2" />
<text  x="1192.70" y="239.5" ></text>
</g>
<g >
<title>drm_update_vblank_count (1 samples, 0.03%)</title><rect x="678.3" y="197" width="0.3" height="15.0" fill="rgb(210,227,4)" rx="2" ry="2" />
<text  x="681.27" y="207.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_crtc_scanoutpos (3 samples, 0.08%)</title><rect x="677.1" y="101" width="0.9" height="15.0" fill="rgb(241,200,27)" rx="2" ry="2" />
<text  x="680.07" y="111.5" ></text>
</g>
<g >
<title>intel_pstate_update_util (1 samples, 0.03%)</title><rect x="68.0" y="277" width="0.3" height="15.0" fill="rgb(243,76,6)" rx="2" ry="2" />
<text  x="70.95" y="287.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.10%)</title><rect x="1188.5" y="293" width="1.2" height="15.0" fill="rgb(252,164,31)" rx="2" ry="2" />
<text  x="1191.51" y="303.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (4 samples, 0.10%)</title><rect x="1188.5" y="389" width="1.2" height="15.0" fill="rgb(234,222,27)" rx="2" ry="2" />
<text  x="1191.51" y="399.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="68.0" y="421" width="0.3" height="15.0" fill="rgb(207,129,20)" rx="2" ry="2" />
<text  x="70.95" y="431.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.03%)</title><rect x="1189.7" y="405" width="0.3" height="15.0" fill="rgb(213,203,29)" rx="2" ry="2" />
<text  x="1192.70" y="415.5" ></text>
</g>
<g >
<title>amdgpu_mm_rreg (1 samples, 0.03%)</title><rect x="678.0" y="85" width="0.3" height="15.0" fill="rgb(213,32,33)" rx="2" ry="2" />
<text  x="680.97" y="95.5" ></text>
</g>
<g >
<title>Classify (5 samples, 0.13%)</title><rect x="683.9" y="421" width="1.5" height="15.0" fill="rgb(216,55,11)" rx="2" ry="2" />
<text  x="686.94" y="431.5" ></text>
</g>
<g >
<title>event_function (4 samples, 0.10%)</title><rect x="1188.5" y="341" width="1.2" height="15.0" fill="rgb(243,118,49)" rx="2" ry="2" />
<text  x="1191.51" y="351.5" ></text>
</g>
<g >
<title>amdgpu_mm_rreg (1 samples, 0.03%)</title><rect x="1189.7" y="69" width="0.3" height="15.0" fill="rgb(247,87,21)" rx="2" ry="2" />
<text  x="1192.70" y="79.5" ></text>
</g>
<g >
<title>amd_sched_fence_finished (1 samples, 0.03%)</title><rect x="678.9" y="181" width="0.3" height="15.0" fill="rgb(253,37,25)" rx="2" ry="2" />
<text  x="681.87" y="191.5" ></text>
</g>
<g >
<title>dc_interrupt_ack (1 samples, 0.03%)</title><rect x="676.8" y="229" width="0.3" height="15.0" fill="rgb(236,191,18)" rx="2" ry="2" />
<text  x="679.77" y="239.5" ></text>
</g>
<g >
<title>__perf_event_enable (4 samples, 0.10%)</title><rect x="1188.5" y="325" width="1.2" height="15.0" fill="rgb(226,103,39)" rx="2" ry="2" />
<text  x="1191.51" y="335.5" ></text>
</g>
<g >
<title>PostClassify (1 samples, 0.03%)</title><rect x="68.3" y="453" width="0.3" height="15.0" fill="rgb(238,142,21)" rx="2" ry="2" />
<text  x="71.25" y="463.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (4 samples, 0.10%)</title><rect x="1188.5" y="421" width="1.2" height="15.0" fill="rgb(251,56,39)" rx="2" ry="2" />
<text  x="1191.51" y="431.5" ></text>
</g>
<g >
<title>dm_vblank_get_counter (1 samples, 0.03%)</title><rect x="678.0" y="149" width="0.3" height="15.0" fill="rgb(208,139,26)" rx="2" ry="2" />
<text  x="680.97" y="159.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.03%)</title><rect x="679.2" y="341" width="0.3" height="15.0" fill="rgb(219,103,42)" rx="2" ry="2" />
<text  x="682.16" y="351.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.03%)</title><rect x="1189.7" y="373" width="0.3" height="15.0" fill="rgb(223,69,52)" rx="2" ry="2" />
<text  x="1192.70" y="383.5" ></text>
</g>
<g >
<title>dce110_timing_generator_get_vblank_counter (1 samples, 0.03%)</title><rect x="678.0" y="117" width="0.3" height="15.0" fill="rgb(230,155,31)" rx="2" ry="2" />
<text  x="680.97" y="127.5" ></text>
</g>
<g >
<title>amdgpu_get_vblank_counter_kms (1 samples, 0.03%)</title><rect x="678.3" y="165" width="0.3" height="15.0" fill="rgb(226,31,18)" rx="2" ry="2" />
<text  x="681.27" y="175.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (8 samples, 0.20%)</title><rect x="676.8" y="325" width="2.4" height="15.0" fill="rgb(222,85,36)" rx="2" ry="2" />
<text  x="679.77" y="335.5" ></text>
</g>
<g >
<title>dm_crtc_high_irq (1 samples, 0.03%)</title><rect x="1189.7" y="245" width="0.3" height="15.0" fill="rgb(224,211,13)" rx="2" ry="2" />
<text  x="1192.70" y="255.5" ></text>
</g>
<g >
<title>BeatDetectAndClassify (363 samples, 9.19%)</title><rect x="686.0" y="421" width="108.5" height="15.0" fill="rgb(222,74,45)" rx="2" ry="2" />
<text  x="689.04" y="431.5" >BeatDetectAnd..</text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.03%)</title><rect x="676.5" y="357" width="0.3" height="15.0" fill="rgb(210,129,27)" rx="2" ry="2" />
<text  x="679.48" y="367.5" ></text>
</g>
<g >
<title>dma_fence_signal (1 samples, 0.03%)</title><rect x="678.9" y="165" width="0.3" height="15.0" fill="rgb(240,22,47)" rx="2" ry="2" />
<text  x="681.87" y="175.5" ></text>
</g>
<g >
<title>amdgpu_ih_process (8 samples, 0.20%)</title><rect x="676.8" y="277" width="2.4" height="15.0" fill="rgb(214,224,3)" rx="2" ry="2" />
<text  x="679.77" y="287.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="68.0" y="437" width="0.3" height="15.0" fill="rgb(236,92,19)" rx="2" ry="2" />
<text  x="70.95" y="447.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.03%)</title><rect x="68.0" y="373" width="0.3" height="15.0" fill="rgb(253,84,39)" rx="2" ry="2" />
<text  x="70.95" y="383.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.05%)</title><rect x="676.2" y="405" width="0.6" height="15.0" fill="rgb(216,11,13)" rx="2" ry="2" />
<text  x="679.18" y="415.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.10%)</title><rect x="1188.5" y="245" width="1.2" height="15.0" fill="rgb(235,155,8)" rx="2" ry="2" />
<text  x="1191.51" y="255.5" ></text>
</g>
</g>
</svg>
